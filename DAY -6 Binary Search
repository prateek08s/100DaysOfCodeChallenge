/*Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1.

You must write an algorithm with O(log n) runtime complexity.

 

Example 1:

Input: nums = [-1,0,3,5,9,12], target = 9
Output: 4
Explanation: 9 exists in nums and its index is 4
Example 2:

Input: nums = [-1,0,3,5,9,12], target = 2
Output: -1
Explanation: 2 does not exist in nums so return -1

*/

import java.util.*;

public class DAY6 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number of elements in the array: ");
        int n = sc.nextInt();

        int[] arr = new int[n];

        System.out.println("Enter the elements of the array: ");
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        System.out.println("Enter the target number: ");
        int target = sc.nextInt();

        int start = 0;
        int end = n - 1;

        while (start <= end) 
        {
            int mid = start + (end - start) / 2;

            if (arr[mid] == target) 
            {
                System.out.println("Target found at index: " + mid);
                break;
            } 
            else if (arr[mid] < target)
            {
                start = mid + 1;
            } 
            else 
            {
                end = mid - 1;
            }
        }
        
        if (start > end) {
            System.out.println("Target not found in the array.");
        }
    }
}
